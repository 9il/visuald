<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Native_TrackingCommandMessage" xml:space="preserve">
    <value>Tracking command:</value>
  </data>
  <data name="MissingRequiredArgument" xml:space="preserve">
    <value>Missing required argument &lt;{0}&gt; for property &lt;{1}&gt;.</value>
  </data>
  <data name="Shared.ParametersMustHaveTheSameLength" xml:space="preserve">
    <value>Parameters "{0}" and "{1}" must have the same number of elements.</value>
  </data>
  <data name="Move.Error" xml:space="preserve">
    <value>Unable to move file "{0}" to "{1}". {2}</value>
  </data>
  <data name="TrackedVCToolTask.RebuildingAllSourcesCommandLineChanged" xml:space="preserve">
    <value>Forcing rebuild of all source files due to a change in the command line since the last build.</value>
  </data>
  <data name="CustomBuild.CircularDepedencyDetected" xml:space="preserve">
    <value>MSB8017: A circular dependency has been detected while executing custom build commands for item "{0}". This may cause incremental build to work incorrectly.</value>
  </data>
  <data name="CL.RebuildingNoPDB" xml:space="preserve">
    <value>Forcing recompile of all source files due to missing PDB "{0}".</value>
  </data>
  <data name="MissingAttribute" xml:space="preserve">
    <value>Element &lt;{0}&gt; does not contain the required attribute "{1}".</value>
  </data>
  <data name="TrackedVCToolTask.RebuildingDueToInvalidTLogContents" xml:space="preserve">
    <value>MSB8015: Forcing a rebuild of all source files due to the contents of "{0}" being invalid.</value>
  </data>
  <data name="TrackedVCToolTask.RebuildingSourceCommandLineChanged" xml:space="preserve">
    <value>Forcing rebuild of source file "{0}" due to a change in the command line since the last build.</value>
  </data>
  <data name="Shared.ParameterCannotHaveZeroLength" xml:space="preserve">
    <value>Parameter "{0}" cannot have zero length.</value>
  </data>
  <data name="CommandLineDiffer" xml:space="preserve">
    <value>Expected "{0}" but got "{1}".</value>
  </data>
  <data name="InvalidType" xml:space="preserve">
    <value>Expecting "{0}".</value>
  </data>
  <data name="TrackedVCToolTask.CreateUnicodeOutputPipeFailed" xml:space="preserve">
    <value>MSB8016: Can not turn on Unicode output for "{0}". Some Unicode characters will be improperly displayed.</value>
  </data>
  <data name="Move.FileComment" xml:space="preserve">
    <value>Moving file from "{0}" to "{1}".</value>
  </data>
  <data name="XamlTaskParseFailed" xml:space="preserve">
    <value>Unable to parse Xaml task.  {0}</value>
  </data>
  <data name="CustomBuild.NoOutputs" xml:space="preserve">
    <value>MSB8018: No outputs specified for item "{0}". Its custom build command will be skipped.</value>
  </data>
  <data name="XmlError" xml:space="preserve">
    <value>Xml Error: {0}.</value>
  </data>
  <data name="ArgumentRequired" xml:space="preserve">
    <value>Switch &lt;{0}&gt; requires an argument.</value>
  </data>
  <data name="TrackedVCToolTask.RebuildingDueToInvalidTLog" xml:space="preserve">
    <value>MSB8014: Forcing a rebuild of all sources due to an error with the tracking logs. {0}</value>
  </data>
  <data name="TrackedVCToolTask.RebuildingNoCommandTLog" xml:space="preserve">
    <value>Forcing rebuild of all source files due to missing command TLog "{0}".</value>
  </data>
  <data name="MetaGenInfoReferenceDirectories" xml:space="preserve">
    <value>To improve incremental build performance for managed components, please make sure that the 'VC++ Directories-&gt;Reference Directories' points to all the paths which contain the referenced managed assemblies.</value>
  </data>
  <data name="InternalError" xml:space="preserve">
    <value>Internal Error has occurred. Most likely a bug.</value>
  </data>
  <data name="Shared.ParameterCannotBeNull" xml:space="preserve">
    <value>Parameter "{0}" cannot be null.</value>
  </data>
  <data name="MissingRootElement" xml:space="preserve">
    <value>Xml file must start with the root element &lt;{0}&gt;.</value>
  </data>
  <data name="General.InvalidValue" xml:space="preserve">
    <value>MSB3098: "{1}" task received an invalid value for the "{0}" parameter.</value>
  </data>
  <data name="Shared.FailedCreatingTempFile" xml:space="preserve">
    <value>MSB5003: Failed to create a temporary file. Temporary files folder is full or its path is incorrect. {0}</value>
  </data>
  <data name="Error.MissingFile" xml:space="preserve">
    <value>Required file "{0}" is missing.</value>
  </data>
  <data name="XamlTaskCreationFailed" xml:space="preserve">
    <value>Unable to create Xaml task.  Compilation failed.  {0}</value>
  </data>
  <data name="ImproperType" xml:space="preserve">
    <value>Element &lt;{0}&gt; has invalid type of "{1}".</value>
  </data>
  <data name="MissingRequiredArgumentWithValue" xml:space="preserve">
    <value>Missing required argument &lt;{0}&gt; for property &lt;{1}&gt; which is set to {2}.</value>
  </data>
  <data name="ArgumentOutOfRange" xml:space="preserve">
    <value>Element &lt;{0}&gt; has an invalid value of "{1}".</value>
  </data>
</root>