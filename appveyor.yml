#---------------------------------#
#      general configuration      #
#---------------------------------#

#version: 1.0.{build}-{branch}

# Do not build on tags (GitHub only)
skip_tags: true

#---------------------------------#
#    environment configuration    #
#---------------------------------#

# Operating system (build VM template)

environment:
  matrix:
    - APPVEYOR_JOB_CONFIG: Release14
      APPVEYOR_JOB_ARCH:   x86
      D_COMPILER:          dmd
      VS:                  14
      os:                  Visual Studio 2015
    - APPVEYOR_JOB_CONFIG: Release12
      APPVEYOR_JOB_ARCH:   x86
      D_COMPILER:          dmd
      VS:                  12
      os:                  Visual Studio 2013

#matrix:
#  allow_failures:
#    - APPVEYOR_JOB_CONFIG: Release

# scripts that are called at very beginning, before repo cloning
init:
  - git config --global core.autocrlf input

# scripts that run after cloning repository
install:
  # show environment
  - set
  - cd c:\projects
  # Download & extract D compiler
  - ps: |
        If ($Env:D_COMPILER -eq 'dmd') {
            Start-FileDownload 'http://downloads.dlang.org/releases/2.x/2.071.1/dmd.2.071.1.windows.7z' -FileName 'dmd2.7z'
            7z x dmd2.7z > $null
            Set-Item -path env:DMD -value c:\projects\dmd2\windows\bin\dmd.exe
            c:\projects\dmd2\windows\bin\dmd.exe --version
        } Else {
            If ($Env:D_COMPILER -eq 'dmd-nightly') {
                Start-FileDownload 'http://nightlies.dlang.org/dmd-nightly/dmd.master.windows.7z' -FileName 'dmd2.7z'
                7z x dmd2.7z > $null
                Set-Item -path env:DMD -value c:\projects\dmd2\windows\bin\dmd.exe
                c:\projects\dmd2\windows\bin\dmd.exe --version
            } Else {
                If ($Env:APPVEYOR_JOB_ARCH -eq 'x64') {
                    Start-FileDownload 'http://github.com/ldc-developers/ldc/releases/download/v1.0.0/ldc2-1.0.0-win64-msvc.zip' -FileName 'ldc2.zip'
                    7z x ldc2.zip > $null
                    Set-Item -path env:DMD -value c:\projects\ldc2-1.0.0-win64-msvc\bin\ldmd2.exe
                    c:\projects\ldc2-1.0.0-win64-msvc\bin\ldc2 --version
                } Else {
                    Start-FileDownload 'http://github.com/ldc-developers/ldc/releases/download/v1.0.0/ldc2-1.0.0-win32-msvc.zip' -FileName 'ldc2.zip'
                    7z x ldc2.zip > $null
                    Set-Item -path env:DMD -value c:\projects\ldc2-1.0.0-win32-msvc\bin\ldmd2.exe
                    c:\projects\ldc2-1.0.0-win32-msvc\bin\ldc2 --version
                }
            }
        }
  # Download & extract coffimplib.exe (no longer available publically as a single download)
  - ps: |
        Start-FileDownload 'http://ftp.digitalmars.com/Digital_Mars_C++/Patch/cd851.zip' -FileName 'cd851.zip'
        7z x cd851.zip > $null
        copy c:\projects\dm\bin\coffimplib.exe c:\projects\dmd2\windows\bin
  # Download & install Visual D
  - ps: |
        Start-FileDownload 'https://github.com/dlang/visuald/releases/download/v0.3.43/VisualD-v0.3.43.exe' -FileName 'VisualD-v0.3.43.exe'
  - .\VisualD-v0.3.43.exe /S
  # configure DMD path
  - reg add "HKLM\SOFTWARE\Microsoft\VisualStudio\12.0\ToolsOptionsPages\Projects\Visual D Settings" /v DMDInstallDir /t REG_SZ /d c:\projects\dmd2 /reg:32 /f
  - reg add "HKLM\SOFTWARE\Microsoft\VisualStudio\14.0\ToolsOptionsPages\Projects\Visual D Settings" /v DMDInstallDir /t REG_SZ /d c:\projects\dmd2 /reg:32 /f
  - reg add "HKLM\SOFTWARE\Microsoft\VisualStudio\14.0\ToolsOptionsPages\Projects\Visual D Settings" /v optlinkDeps /t REG_DWORD /d 0 /reg:32 /f
  # Set environment variables
  - set PATH=c:\projects\dm\bin;%PATH%
  - if "%APPVEYOR_JOB_ARCH%"=="x64" ( call "c:\Program Files (x86)\Microsoft Visual Studio %VS%.0\VC\vcvarsall.bat" amd64 )
  - if "%APPVEYOR_JOB_ARCH%"=="x86" ( call "c:\Program Files (x86)\Microsoft Visual Studio %VS%.0\VC\vcvarsall.bat" x86 )
  # Print environment info
  - set
  - msbuild /version
  - cl

#---------------------------------#
#       build configuration       #
#---------------------------------#

before_build:
  - cd c:\projects

build_script:
  - cd c:\projects
  - cd visuald
  # ignore failure once, in case it needs reloading the sdk project
  - nmake prerequisites || nmake prerequisites
  # build Visual D
  - nmake visuald_vs
  # Fetch submodules
  - git submodule update --init --recursive
  - cd ..
  # Clone mago/cv2pdb (need to be two levels up)
  - cd ..
  - git clone https://github.com/rainers/mago.git mago
  - set VS_SDK_PATH=%VSSDK120Install%
  - copy mago\PropSheets\Template_MagoDbg_properties.props mago\PropSheets\MagoDbg_properties.props
  - md cv2pdb
  - cd cv2pdb
  - git clone https://github.com/rainers/cv2pdb.git trunk
  - cd ..
  # Download & extract binutils
  - cd projects
  - ps: |
        Start-FileDownload 'http://ftp.gnu.org/gnu/binutils/binutils-2.25.tar.gz' -FileName 'binutils-2.25.tar.gz'
        7z x binutils-2.25.tar.gz > $null
        7z x binutils-2.25.tar > $null
  - 'if "%VS%"=="12" echo #define snprintf _snprintf >binutils-2.25\config.h'
  - 'if "%VS%"=="14" echo // empty                   >binutils-2.25\config.h'
  - set BINUTILS=c:\projects\binutils-2.25
  - set DMDINSTALLDIR=c:\projects\dmd2
  # build installer
  - cd visuald
  - nmake install_vs

after_build:
  # publish as artifact
  - cd c:\projects
  - ps: |
        If ($Env:APPVEYOR_JOB_CONFIG -eq 'Release12') {
            echo 'Preparing artifact...'
            $artifactFilename = "downloads/VisualD-v0.3.44-beta2.exe"
            Push-AppveyorArtifact $artifactFilename
        }

on_failure:
  - cd c:\projects
  - type visuald\bin\Release\vsi2d.buildlog.html

#---------------------------------#
#       test configuration        #
#---------------------------------#

test_script:
  - cd c:\projects

#---------------------------------#
#     deployment configuration    #
#---------------------------------#

# deploy:
#   - provider: GitHub
#     release: 'Visual D master'
#     description: "Latest successful Windows CI builds of branch 'master'"
#     draft: true
#     prerelease: true
#     auth_token:
#       secure: ???
#     artifact: downloads/VisualD-v0.3.44-beta2-$(APPVEYOR_BUILD_NUMBER).exe
#     on:
#       branch: master
#       APPVEYOR_JOB_CONFIG: Release12
